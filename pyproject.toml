[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "arclio-mcp-tooling"
version = "0.1.0"
description = "Model Context Protocol tooling monorepo"
authors = [
    {name = "Arclio Team", email = "info@arclio.com"},
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "uv>=0.1.1",
    "trio>=0.22.0",
    "ipykernel>=6.29.0",
    "matplotlib>=3.8.0",

]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = [
    ".",
    "packages/google-workspace-mcp/src",
    "packages/markdowndeck/src",
]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (components working together)",
    "end_to_end: marks tests as end-to-end tests (full pipeline validation)",
    "stress: marks tests as stress or performance tests (slow, resource-intensive)",
]

[tool.coverage.run]
branch = true
source = ["packages/markdowndeck/src"]
omit = ["**/__main__.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 85

[tool.coverage.html]
directory = "coverage_html"

[tool.uv.workspace]
# List all workspace packages
members = [
    "packages/google-workspace-mcp",
    "packages/markdowndeck",
]

[tool.uv.sources]
google-workspace-mcp = {workspace = true}
markdowndeck = { workspace = true }


[tool.hatch.build.targets.wheel]
packages = ["packages/*"]
